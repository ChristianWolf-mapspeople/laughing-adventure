{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPPositionProviderDelegate"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@objc","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MPPositionProviderDelegate"}],"platforms":["iOS"]}]}],"metadata":{"externalID":"c:@M@MapsIndoors@objc(pl)MPPositionProviderDelegate","modules":[{"name":"MapsIndoors"}],"symbolKind":"protocol","role":"symbol","title":"MPPositionProviderDelegate","navigatorTitle":[{"kind":"identifier","text":"MPPositionProviderDelegate"}],"roleHeading":"Protocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MPPositionProviderDelegate","kind":"identifier"}]},"variants":[{"paths":["\/documentation\/mapsindoors\/mppositionproviderdelegate"],"traits":[{"interfaceLanguage":"swift"}]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/mapsindoors\/mppositionproviderdelegate"]}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"text":"Protocol specifying how an indoor positioning provider delegate should be implemented as the receiver of user positions.","type":"text"}],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPPositionProviderDelegate\/onPositionUpdate(position:)"]}],"references":{"doc://com.mapspeople.mapsindoors/documentation/MapsIndoors/MPMapControlDelegate":{"identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPMapControlDelegate","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"MPMapControlDelegate","kind":"identifier"}],"abstract":[{"type":"text","text":"Delegate protocol specification to react to the events that "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPMapControl"},{"text":" emits.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/mapsindoors\/mpmapcontroldelegate","title":"MPMapControlDelegate","navigatorTitle":[{"kind":"identifier","text":"MPMapControlDelegate"}]},"doc://com.mapspeople.mapsindoors/documentation/MapsIndoors/MPMapControl":{"role":"symbol","url":"\/documentation\/mapsindoors\/mpmapcontrol","identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPMapControl","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MPMapControl","kind":"identifier"}],"abstract":[{"text":"This is the control object for the visual representation of the MapsIndoors SDK.","type":"text"}],"navigatorTitle":[{"text":"MPMapControl","kind":"identifier"}],"kind":"symbol","type":"topic","title":"MPMapControl"},"MapsPeopleWhite.png":{"type":"image","identifier":"MapsPeopleWhite.png","alt":null,"variants":[{"url":"\/images\/MapsPeopleWhite.png","traits":["1x","light"]}]},"doc://com.mapspeople.mapsindoors/documentation/MapsIndoors/MPMapControlDelegate/onPositionUpdate(position:)":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"onPositionUpdate:"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"onPositionUpdate","kind":"identifier"},{"kind":"text","text":"("},{"text":"position","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@MapsIndoors@objc(cs)MPPositionResult","kind":"typeIdentifier","text":"MPPositionResult"},{"text":")","kind":"text"}],"url":"\/documentation\/mapsindoors\/mpmapcontroldelegate\/onpositionupdate(position:)","abstract":[{"type":"text","text":"Called when "},{"identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPMapControl","isActive":true,"type":"reference"},{"type":"text","text":" receives a new user position from the active "},{"identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPPositionProvider","type":"reference","isActive":true},{"type":"text","text":"."},{"type":"text","text":" "},{"text":"This is the method you should implement if your app needs to be notified about each new user position.","type":"text"}],"identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPMapControlDelegate\/onPositionUpdate(position:)","title":"onPositionUpdate(position:)"},"doc://com.mapspeople.mapsindoors/documentation/MapsIndoors/MPMapControl/delegate":{"title":"delegate","role":"symbol","navigatorTitle":[{"text":"delegate","kind":"identifier"}],"type":"topic","required":true,"identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPMapControl\/delegate","abstract":[{"text":"Listen to events.","type":"text"}],"url":"\/documentation\/mapsindoors\/mpmapcontrol\/delegate","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"delegate","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@MapsIndoors@objc(pl)MPMapControlDelegate","text":"MPMapControlDelegate"},{"kind":"text","text":"?"}],"kind":"symbol"},"doc://com.mapspeople.mapsindoors/documentation/MapsIndoors":{"identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors","abstract":[{"text":"MapsIndoors enables you to show indoor maps in your apps.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"MapsIndoors iOS SDK v4 can use either Google Maps or Mapbox Maps to show and interact with your indoors maps in an iOS app."}],"url":"\/documentation\/mapsindoors","kind":"symbol","images":[{"type":"icon","identifier":"MapsPeopleWhite.png"}],"role":"collection","title":"MapsIndoors","type":"topic"},"doc://com.mapspeople.mapsindoors/documentation/MapsIndoors/MPPositionProviderDelegate/onPositionUpdate(position:)":{"title":"onPositionUpdate(position:)","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"onPositionUpdateWithPosition:"}],"type":"topic","required":true,"identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPPositionProviderDelegate\/onPositionUpdate(position:)","abstract":[{"type":"reference","identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPMapControl","isActive":true},{"type":"text","text":" is dependent on this method to show the current user position on the"},{"type":"text","text":" "},{"type":"text","text":"currently showing map. If your app needs to be notified about each new user position, you should create"},{"type":"text","text":" "},{"type":"text","text":"a class conforming to "},{"identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPMapControlDelegate","type":"reference","isActive":true},{"text":" and set that as the ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPMapControl\/delegate","isActive":true},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"User position updates will then be available via the"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPMapControlDelegate\/onPositionUpdate(position:)","isActive":true},{"type":"text","text":" function that you implement in your class."}],"url":"\/documentation\/mapsindoors\/mppositionproviderdelegate\/onpositionupdate(position:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onPositionUpdate","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@M@MapsIndoors@objc(cs)MPPositionResult","text":"MPPositionResult","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol"},"doc://com.mapspeople.mapsindoors/documentation/MapsIndoors/MPPositionProviderDelegate":{"title":"MPPositionProviderDelegate","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MPPositionProviderDelegate"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MPPositionProviderDelegate"}],"identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPPositionProviderDelegate","abstract":[{"type":"text","text":"Protocol specifying how an indoor positioning provider delegate should be implemented as the receiver of user positions."}],"url":"\/documentation\/mapsindoors\/mppositionproviderdelegate","kind":"symbol"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"value":"Protocol","op":"replace","path":"\/metadata\/roleHeading"},{"op":"replace","value":"MPPositionProviderDelegate","path":"\/metadata\/title"},{"value":"protocol","op":"replace","path":"\/metadata\/symbolKind"},{"value":[{"text":"MPPositionProviderDelegate","kind":"identifier"}],"op":"replace","path":"\/metadata\/fragments"},{"path":"\/metadata\/navigatorTitle","value":[{"text":"MPPositionProviderDelegate","kind":"identifier"}],"op":"replace"},{"op":"replace","path":"\/topicSections","value":[{"title":"Instance Methods","identifiers":["doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPPositionProviderDelegate\/onPositionUpdate(position:)"]}]},{"path":"\/relationshipsSections","op":"add","value":null},{"op":"add","value":null,"path":"\/seeAlsoSections"},{"op":"replace","value":{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"@protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MPPositionProviderDelegate"}],"languages":["occ"]}],"kind":"declarations"},"path":"\/primaryContentSections\/0"},{"path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPMapControlDelegate\/title","op":"replace","value":"MPMapControlDelegate"},{"path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPMapControlDelegate\/fragments","op":"replace","value":[{"text":"MPMapControlDelegate","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPMapControl\/title","op":"replace","value":"MPMapControl"},{"path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPMapControl\/fragments","op":"replace","value":[{"text":"MPMapControl","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPMapControlDelegate~1onPositionUpdate(position:)\/title","value":"onPositionUpdate:"},{"op":"replace","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"onPositionUpdate:"}],"path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPMapControlDelegate~1onPositionUpdate(position:)\/fragments"},{"value":"delegate","op":"replace","path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPMapControl~1delegate\/title"},{"value":[{"kind":"identifier","text":"delegate"}],"path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPMapControl~1delegate\/fragments","op":"replace"},{"value":"onPositionUpdateWithPosition:","op":"replace","path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPPositionProviderDelegate~1onPositionUpdate(position:)\/title"},{"path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPPositionProviderDelegate~1onPositionUpdate(position:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"onPositionUpdateWithPosition:","kind":"identifier"}],"op":"replace"},{"op":"replace","value":"MPPositionProviderDelegate","path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPPositionProviderDelegate\/title"},{"value":[{"kind":"identifier","text":"MPPositionProviderDelegate"}],"path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPPositionProviderDelegate\/fragments","op":"replace"}],"traits":[{"interfaceLanguage":"occ"}]}]}