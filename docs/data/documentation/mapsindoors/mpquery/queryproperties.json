{"hierarchy":{"paths":[["doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors","doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPQuery"]]},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPQuery\/queryProperties","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapsindoors\/mpquery\/queryproperties"]},{"paths":["\/documentation\/mapsindoors\/mpquery\/queryproperties"],"traits":[{"interfaceLanguage":"occ"}]}],"abstract":[{"text":"List of properties that ","type":"text"},{"code":"MPLocationService","type":"codeVoice"},{"text":" will take into account when finding and sorting matching locations. By default, ","type":"text"},{"type":"codeVoice","code":"MPLocationService"},{"type":"text","text":" will search in the name, externalId and aliases properties. Possible other properties depend on the location content. E.g. if an "},{"type":"reference","identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPLocation","isActive":true},{"text":" has a field called ","type":"text"},{"code":"booking-id","type":"codeVoice"},{"type":"text","text":", the string “booking-id” (case-sensitive) may be added. Query properties added that do not exist in any Locations will be ignored."}],"metadata":{"modules":[{"name":"MapsIndoors"}],"externalID":"c:@M@MapsIndoors@objc(cs)MPQuery(py)queryProperties","roleHeading":"Instance Property","navigatorTitle":[{"text":"queryProperties","kind":"identifier"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"queryProperties","kind":"identifier"},{"kind":"text","text":": ["},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}],"symbolKind":"property","title":"queryProperties","role":"symbol"},"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@objc"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"queryProperties","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"] { ","kind":"text"},{"text":"get","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"text":" }","kind":"text"}]}],"kind":"declarations"}],"references":{"doc://com.mapspeople.mapsindoors/documentation/MapsIndoors/MPQuery":{"identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPQuery","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"MPQuery","kind":"identifier"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"MPQuery","kind":"identifier"}],"title":"MPQuery","url":"\/documentation\/mapsindoors\/mpquery","kind":"symbol","abstract":[{"type":"text","text":"Query object used when making a request to "},{"isActive":true,"identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MapsIndoorsShared\/locationsWith(query:filter:)","type":"reference"},{"text":".","type":"text"}]},"MapsPeopleWhite.png":{"alt":null,"type":"image","identifier":"MapsPeopleWhite.png","variants":[{"traits":["1x","light"],"url":"\/images\/MapsPeopleWhite.png"}]},"doc://com.mapspeople.mapsindoors/documentation/MapsIndoors/MapsIndoorsShared/locationsWith(query:filter:)":{"identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MapsIndoorsShared\/locationsWith(query:filter:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"locationsWith"},{"kind":"text","text":"("},{"kind":"externalParam","text":"query"},{"text":": ","kind":"text"},{"text":"MPQuery","preciseIdentifier":"c:@M@MapsIndoors@objc(cs)MPQuery","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"filter"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"MPFilter","preciseIdentifier":"c:@M@MapsIndoors@objc(cs)MPFilter"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"MPLocation","preciseIdentifier":"c:@M@MapsIndoors@objc(pl)MPLocation"},{"kind":"text","text":"]"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"locationsWithQuery:filter:completionHandler:","kind":"identifier"}],"title":"locationsWith(query:filter:)","url":"\/documentation\/mapsindoors\/mapsindoorsshared\/locationswith(query:filter:)","kind":"symbol","required":true,"abstract":[{"type":"text","text":"Search for MPLocations using MPQuery and\/or MPFilter."}]},"doc://com.mapspeople.mapsindoors/documentation/MapsIndoors/MPLocation":{"identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPLocation","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MPLocation"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MPLocation"}],"title":"MPLocation","kind":"symbol","url":"\/documentation\/mapsindoors\/mplocation","abstract":[{"type":"text","text":"This holds the data for a single location and a marker to display the data on a map."}]},"doc://com.mapspeople.mapsindoors/documentation/MapsIndoors":{"kind":"symbol","abstract":[{"type":"text","text":"MapsIndoors enables you to show indoor maps in your apps."},{"type":"text","text":" "},{"text":"MapsIndoors iOS SDK v4 can use either Google Maps or Mapbox Maps to show and interact with your indoors maps in an iOS app.","type":"text"}],"title":"MapsIndoors","images":[{"type":"icon","identifier":"MapsPeopleWhite.png"}],"identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors","type":"topic","url":"\/documentation\/mapsindoors","role":"collection"},"doc://com.mapspeople.mapsindoors/documentation/MapsIndoors/MPQuery/queryProperties":{"identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPQuery\/queryProperties","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"queryProperties","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"queryProperties"}],"title":"queryProperties","url":"\/documentation\/mapsindoors\/mpquery\/queryproperties","kind":"symbol","abstract":[{"type":"text","text":"List of properties that "},{"type":"codeVoice","code":"MPLocationService"},{"type":"text","text":" will take into account when finding and sorting matching locations. By default, "},{"type":"codeVoice","code":"MPLocationService"},{"type":"text","text":" will search in the name, externalId and aliases properties. Possible other properties depend on the location content. E.g. if an "},{"type":"reference","identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPLocation","isActive":true},{"type":"text","text":" has a field called "},{"code":"booking-id","type":"codeVoice"},{"type":"text","text":", the string “booking-id” (case-sensitive) may be added. Query properties added that do not exist in any Locations will be ignored."}]}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"replace","value":"Instance Property","path":"\/metadata\/roleHeading"},{"path":"\/metadata\/title","value":"queryProperties","op":"replace"},{"path":"\/metadata\/symbolKind","value":"property","op":"replace"},{"op":"replace","value":[{"kind":"identifier","text":"queryProperties"}],"path":"\/metadata\/fragments"},{"path":"\/topicSections","value":null,"op":"add"},{"path":"\/relationshipsSections","op":"add","value":null},{"path":"\/seeAlsoSections","value":null,"op":"add"},{"path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"@property","kind":"keyword"},{"kind":"text","text":" ("},{"kind":"keyword","text":"nonatomic"},{"text":", ","kind":"text"},{"kind":"keyword","text":"copy"},{"text":", ","kind":"text"},{"kind":"keyword","text":"readwrite"},{"text":") ","kind":"text"},{"text":"NSArray<NSString *>","kind":"typeIdentifier","preciseIdentifier":"c:Q$objc(cs)NSArray"},{"text":" * ","kind":"text"},{"kind":"identifier","text":"queryProperties"}],"languages":["occ"]}]},"op":"replace"},{"value":"MPQuery","path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPQuery\/title","op":"replace"},{"op":"replace","value":[{"kind":"identifier","text":"MPQuery"}],"path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPQuery\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MapsIndoorsShared~1locationsWith(query:filter:)\/title","value":"locationsWithQuery:filter:completionHandler:"},{"op":"replace","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"locationsWithQuery:filter:completionHandler:"}],"path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MapsIndoorsShared~1locationsWith(query:filter:)\/fragments"},{"op":"replace","value":"MPLocation","path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPLocation\/title"},{"value":[{"text":"MPLocation","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPLocation\/fragments"},{"value":"queryProperties","op":"replace","path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPQuery~1queryProperties\/title"},{"path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPQuery~1queryProperties\/fragments","value":[{"text":"queryProperties","kind":"identifier"}],"op":"replace"}]}]}