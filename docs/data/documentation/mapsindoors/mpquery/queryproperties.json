{"abstract":[{"type":"text","text":"List of properties that "},{"type":"codeVoice","code":"MPLocationService"},{"text":" will take into account when finding and sorting matching locations. By default, ","type":"text"},{"code":"MPLocationService","type":"codeVoice"},{"type":"text","text":" will search in the name, externalId and aliases properties. Possible other properties depend on the location content. E.g. if an "},{"type":"reference","identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPLocation","isActive":true},{"type":"text","text":" has a field called "},{"code":"booking-id","type":"codeVoice"},{"type":"text","text":", the string “booking-id” (case-sensitive) may be added. Query properties added that do not exist in any Locations will be ignored."}],"sections":[],"hierarchy":{"paths":[["doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors","doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPQuery"]]},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"@objc","kind":"attribute"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"queryProperties"},{"text":": [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"] { ","kind":"text"},{"kind":"keyword","text":"get"},{"text":" ","kind":"text"},{"text":"set","kind":"keyword"},{"kind":"text","text":" }"}]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"modules":[{"name":"MapsIndoors"}],"externalID":"c:@M@MapsIndoors@objc(cs)MPQuery(py)queryProperties","title":"queryProperties","roleHeading":"Instance Property","symbolKind":"property","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"queryProperties","kind":"identifier"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"]"}],"navigatorTitle":[{"text":"queryProperties","kind":"identifier"}],"role":"symbol"},"identifier":{"url":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPQuery\/queryProperties","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mapsindoors\/mpquery\/queryproperties"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/mapsindoors\/mpquery\/queryproperties"]}],"references":{"doc://com.mapspeople.mapsindoors/documentation/MapsIndoors/MPQuery":{"abstract":[{"type":"text","text":"Query object used when making a request to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MapsIndoorsShared\/locationsWith(query:filter:)"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPQuery","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"MPQuery","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"MPQuery"}],"url":"\/documentation\/mapsindoors\/mpquery","kind":"symbol","title":"MPQuery"},"doc://com.mapspeople.mapsindoors/documentation/MapsIndoors/MPQuery/queryProperties":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"queryProperties","kind":"identifier"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}],"kind":"symbol","role":"symbol","type":"topic","title":"queryProperties","abstract":[{"text":"List of properties that ","type":"text"},{"type":"codeVoice","code":"MPLocationService"},{"text":" will take into account when finding and sorting matching locations. By default, ","type":"text"},{"code":"MPLocationService","type":"codeVoice"},{"type":"text","text":" will search in the name, externalId and aliases properties. Possible other properties depend on the location content. E.g. if an "},{"type":"reference","identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPLocation","isActive":true},{"type":"text","text":" has a field called "},{"type":"codeVoice","code":"booking-id"},{"type":"text","text":", the string “booking-id” (case-sensitive) may be added. Query properties added that do not exist in any Locations will be ignored."}],"url":"\/documentation\/mapsindoors\/mpquery\/queryproperties","navigatorTitle":[{"text":"queryProperties","kind":"identifier"}],"identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPQuery\/queryProperties"},"doc://com.mapspeople.mapsindoors/documentation/MapsIndoors":{"abstract":[{"text":"MapsIndoors enables you to show indoor maps in your apps.","type":"text"},{"type":"text","text":" "},{"text":"MapsIndoors iOS SDK v4 can use either Google Maps or Mapbox Maps to show and interact with your indoors maps in an iOS app.","type":"text"}],"kind":"symbol","title":"MapsIndoors","images":[{"identifier":"MapsPeopleWhite.png","type":"icon"}],"type":"topic","role":"collection","identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors","url":"\/documentation\/mapsindoors"},"doc://com.mapspeople.mapsindoors/documentation/MapsIndoors/MapsIndoorsShared/locationsWith(query:filter:)":{"required":true,"url":"\/documentation\/mapsindoors\/mapsindoorsshared\/locationswith(query:filter:)","identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MapsIndoorsShared\/locationsWith(query:filter:)","abstract":[{"type":"text","text":"Search for MPLocations using MPQuery and\/or MPFilter."}],"role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"locationsWith","kind":"identifier"},{"text":"(","kind":"text"},{"text":"query","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@MapsIndoors@objc(cs)MPQuery","text":"MPQuery","kind":"typeIdentifier"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"filter"},{"kind":"text","text":": "},{"text":"MPFilter","kind":"typeIdentifier","preciseIdentifier":"c:@M@MapsIndoors@objc(cs)MPFilter"},{"text":"?) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> ["},{"text":"MPLocation","kind":"typeIdentifier","preciseIdentifier":"c:@M@MapsIndoors@objc(pl)MPLocation"},{"kind":"text","text":"]"}],"kind":"symbol","title":"locationsWith(query:filter:)","navigatorTitle":[{"kind":"identifier","text":"locationsWithQuery:filter:completionHandler:"}]},"MapsPeopleWhite.png":{"alt":null,"type":"image","variants":[{"url":"\/images\/MapsPeopleWhite.png","traits":["1x","light"]}],"identifier":"MapsPeopleWhite.png"},"doc://com.mapspeople.mapsindoors/documentation/MapsIndoors/MPLocation":{"url":"\/documentation\/mapsindoors\/mplocation","abstract":[{"type":"text","text":"This holds the data for a single location and a marker to display the data on a map."}],"type":"topic","identifier":"doc:\/\/com.mapspeople.mapsindoors\/documentation\/MapsIndoors\/MPLocation","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"text":"MPLocation","kind":"identifier"}],"title":"MPLocation","kind":"symbol","role":"symbol","navigatorTitle":[{"text":"MPLocation","kind":"identifier"}]}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"path":"\/metadata\/roleHeading","op":"replace","value":"Instance Property"},{"value":"queryProperties","op":"replace","path":"\/metadata\/title"},{"path":"\/metadata\/symbolKind","op":"replace","value":"property"},{"op":"replace","path":"\/metadata\/fragments","value":[{"text":"queryProperties","kind":"identifier"}]},{"op":"add","value":null,"path":"\/topicSections"},{"op":"add","path":"\/relationshipsSections","value":null},{"value":null,"path":"\/seeAlsoSections","op":"add"},{"value":{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"@property","kind":"keyword"},{"kind":"text","text":" ("},{"text":"nonatomic","kind":"keyword"},{"kind":"text","text":", "},{"kind":"keyword","text":"copy"},{"text":", ","kind":"text"},{"kind":"keyword","text":"readwrite"},{"text":") ","kind":"text"},{"text":"NSArray<NSString *>","kind":"typeIdentifier","preciseIdentifier":"c:Q$objc(cs)NSArray"},{"kind":"text","text":" * "},{"text":"queryProperties","kind":"identifier"}],"languages":["occ"]}],"kind":"declarations"},"op":"replace","path":"\/primaryContentSections\/0"},{"value":"MPQuery","op":"replace","path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPQuery\/title"},{"op":"replace","value":[{"kind":"identifier","text":"MPQuery"}],"path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPQuery\/fragments"},{"value":"queryProperties","path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPQuery~1queryProperties\/title","op":"replace"},{"op":"replace","value":[{"text":"queryProperties","kind":"identifier"}],"path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPQuery~1queryProperties\/fragments"},{"op":"replace","value":"locationsWithQuery:filter:completionHandler:","path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MapsIndoorsShared~1locationsWith(query:filter:)\/title"},{"path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MapsIndoorsShared~1locationsWith(query:filter:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"locationsWithQuery:filter:completionHandler:"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPLocation\/title","op":"replace","value":"MPLocation"},{"op":"replace","path":"\/references\/doc:~1~1com.mapspeople.mapsindoors~1documentation~1MapsIndoors~1MPLocation\/fragments","value":[{"text":"MPLocation","kind":"identifier"}]}]}]}