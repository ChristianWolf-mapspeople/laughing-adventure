{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MPPositionProviderDelegate"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"NSObjectProtocol","preciseIdentifier":"c:objc(pl)NSObject"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mapsindoors\/mppositionproviderdelegate"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/mapsindoors\/mppositionproviderdelegate"],"traits":[{"interfaceLanguage":"occ"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/MapsIndoors\/objc(pl)NSObject"],"kind":"relationships","title":"Inherits From","type":"inheritsFrom"},{"identifiers":["doc:\/\/MapsIndoors\/documentation\/MapsIndoors\/MPMapControl"],"kind":"relationships","title":"Conforming Types","type":"conformingTypes"}],"identifier":{"url":"doc:\/\/MapsIndoors\/documentation\/MapsIndoors\/MPPositionProviderDelegate","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Protocol specifying how an indoor positioning provider delegate should be implemented as the receiver of user positions."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MPPositionProviderDelegate"}],"title":"MPPositionProviderDelegate","roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","externalID":"c:objc(pl)MPPositionProviderDelegate","modules":[{"name":"MapsIndoors"}],"navigatorTitle":[{"kind":"identifier","text":"MPPositionProviderDelegate"}]},"hierarchy":{"paths":[["doc:\/\/MapsIndoors\/documentation\/MapsIndoors"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/MapsIndoors\/documentation\/MapsIndoors\/MPPositionProviderDelegate\/onPositionFailed(_:)","doc:\/\/MapsIndoors\/documentation\/MapsIndoors\/MPPositionProviderDelegate\/onPositionUpdate(_:)"]}],"references":{"doc://MapsIndoors/documentation/MapsIndoors/MPPositionProviderDelegate/onPositionFailed(_:)":{"navigatorTitle":[{"kind":"identifier","text":"onPositionFailed:"}],"role":"symbol","title":"onPositionFailed(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onPositionFailed"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Positioning fail method. Will return the reference to the actual provider"}],"identifier":"doc:\/\/MapsIndoors\/documentation\/MapsIndoors\/MPPositionProviderDelegate\/onPositionFailed(_:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/mapsindoors\/mppositionproviderdelegate\/onpositionfailed(_:)"},"doc://MapsIndoors/objc(pl)NSObject":{"type":"unresolvable","title":"NSObject","identifier":"doc:\/\/MapsIndoors\/objc(pl)NSObject"},"doc://MapsIndoors/documentation/MapsIndoors/MPPositionProviderDelegate":{"role":"symbol","title":"MPPositionProviderDelegate","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MPPositionProviderDelegate"}],"abstract":[{"type":"text","text":"Protocol specifying how an indoor positioning provider delegate should be implemented as the receiver of user positions."}],"identifier":"doc:\/\/MapsIndoors\/documentation\/MapsIndoors\/MPPositionProviderDelegate","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MPPositionProviderDelegate"}],"url":"\/documentation\/mapsindoors\/mppositionproviderdelegate"},"doc://MapsIndoors/documentation/MapsIndoors/MPPositionProviderDelegate/onPositionUpdate(_:)":{"navigatorTitle":[{"kind":"identifier","text":"onPositionUpdate:"}],"role":"symbol","title":"onPositionUpdate(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onPositionUpdate"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"MPPositionResult","preciseIdentifier":"c:objc(cs)MPPositionResult"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Position update method. Will return a position result."}],"identifier":"doc:\/\/MapsIndoors\/documentation\/MapsIndoors\/MPPositionProviderDelegate\/onPositionUpdate(_:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/mapsindoors\/mppositionproviderdelegate\/onpositionupdate(_:)"},"doc://MapsIndoors/documentation/MapsIndoors/MPMapControl":{"role":"symbol","title":"MPMapControl","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MPMapControl"}],"abstract":[{"type":"text","text":"Convenience class for setting up a Google map with MapsIndoors venues, buildings, locations and other map content."}],"identifier":"doc:\/\/MapsIndoors\/documentation\/MapsIndoors\/MPMapControl","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MPMapControl"}],"url":"\/documentation\/mapsindoors\/mpmapcontrol"},"doc://MapsIndoors/documentation/MapsIndoors":{"role":"collection","title":"MapsIndoors","abstract":[],"identifier":"doc:\/\/MapsIndoors\/documentation\/MapsIndoors","kind":"symbol","type":"topic","url":"\/documentation\/mapsindoors"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Protocol"},{"op":"replace","path":"\/metadata\/title","value":"MPPositionProviderDelegate"},{"op":"replace","path":"\/metadata\/symbolKind","value":"protocol"},{"op":"replace","path":"\/metadata\/fragments","value":[{"kind":"identifier","text":"MPPositionProviderDelegate"}]},{"op":"replace","path":"\/metadata\/navigatorTitle","value":[{"kind":"identifier","text":"MPPositionProviderDelegate"}]},{"op":"replace","path":"\/topicSections","value":[{"title":"Instance Methods","identifiers":["doc:\/\/MapsIndoors\/documentation\/MapsIndoors\/MPPositionProviderDelegate\/onPositionFailed(_:)","doc:\/\/MapsIndoors\/documentation\/MapsIndoors\/MPPositionProviderDelegate\/onPositionUpdate(_:)"]}]},{"op":"replace","path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"@protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MPPositionProviderDelegate"},{"kind":"text","text":"<"},{"kind":"keyword","text":"NSObject"},{"kind":"text","text":">"}],"languages":["occ"],"platforms":["iOS"]}]}},{"op":"replace","path":"\/references\/doc:~1~1MapsIndoors~1documentation~1MapsIndoors~1MPPositionProviderDelegate~1onPositionFailed(_:)\/title","value":"onPositionFailed:"},{"op":"replace","path":"\/references\/doc:~1~1MapsIndoors~1documentation~1MapsIndoors~1MPPositionProviderDelegate~1onPositionFailed(_:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"onPositionFailed:"}]},{"op":"replace","path":"\/references\/doc:~1~1MapsIndoors~1documentation~1MapsIndoors~1MPPositionProviderDelegate\/title","value":"MPPositionProviderDelegate"},{"op":"replace","path":"\/references\/doc:~1~1MapsIndoors~1documentation~1MapsIndoors~1MPPositionProviderDelegate\/fragments","value":[{"kind":"identifier","text":"MPPositionProviderDelegate"}]},{"op":"replace","path":"\/references\/doc:~1~1MapsIndoors~1documentation~1MapsIndoors~1MPPositionProviderDelegate~1onPositionUpdate(_:)\/title","value":"onPositionUpdate:"},{"op":"replace","path":"\/references\/doc:~1~1MapsIndoors~1documentation~1MapsIndoors~1MPPositionProviderDelegate~1onPositionUpdate(_:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"onPositionUpdate:"}]},{"op":"replace","path":"\/references\/doc:~1~1MapsIndoors~1documentation~1MapsIndoors~1MPMapControl\/title","value":"MPMapControl"},{"op":"replace","path":"\/references\/doc:~1~1MapsIndoors~1documentation~1MapsIndoors~1MPMapControl\/fragments","value":[{"kind":"identifier","text":"MPMapControl"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}