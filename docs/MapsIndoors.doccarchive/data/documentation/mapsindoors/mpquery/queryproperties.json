{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"queryProperties"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"] { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" "},{"kind":"keyword","text":"set"},{"kind":"text","text":" }"}],"languages":["swift"],"platforms":["iOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/mapsindoors\/mpquery\/queryproperties"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/mapsindoors\/mpquery\/queryproperties"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"url":"doc:\/\/MapsIndoors\/documentation\/MapsIndoors\/MPQuery\/queryProperties","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"List of properties that "},{"type":"codeVoice","code":"MPLocationService"},{"type":"text","text":" will take into account when finding and sorting matching locations. By default, "},{"type":"codeVoice","code":"MPLocationService"},{"type":"text","text":" will search in the name, externalId (formerly known as roomId) and aliases properties. Possible other properties depend on the location content. E.g. if an "},{"type":"codeVoice","code":"MPLocation"},{"type":"text","text":" has a field called "},{"type":"codeVoice","code":"booking-id"},{"type":"text","text":", the string “booking-id” (case-sensitive) may be added. Query properties added that does not exist in any locations will be ignored.;"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"queryProperties"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}],"title":"queryProperties","roleHeading":"Instance Property","role":"symbol","symbolKind":"property","externalID":"c:objc(cs)MPQuery(py)queryProperties","modules":[{"name":"MapsIndoors"}],"navigatorTitle":[{"kind":"identifier","text":"queryProperties"}]},"hierarchy":{"paths":[["doc:\/\/MapsIndoors\/documentation\/MapsIndoors","doc:\/\/MapsIndoors\/documentation\/MapsIndoors\/MPQuery"]]},"references":{"doc://MapsIndoors/documentation/MapsIndoors":{"role":"collection","title":"MapsIndoors","abstract":[],"identifier":"doc:\/\/MapsIndoors\/documentation\/MapsIndoors","kind":"symbol","type":"topic","url":"\/documentation\/mapsindoors"},"doc://MapsIndoors/documentation/MapsIndoors/MPQuery":{"role":"symbol","title":"MPQuery","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MPQuery"}],"abstract":[{"type":"text","text":"Query object used when making a request to "},{"type":"codeVoice","code":"MPLocationService"},{"type":"text","text":"."}],"identifier":"doc:\/\/MapsIndoors\/documentation\/MapsIndoors\/MPQuery","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MPQuery"}],"url":"\/documentation\/mapsindoors\/mpquery"},"doc://MapsIndoors/documentation/MapsIndoors/MPQuery/queryProperties":{"role":"symbol","title":"queryProperties","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"queryProperties"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}],"abstract":[{"type":"text","text":"List of properties that "},{"type":"codeVoice","code":"MPLocationService"},{"type":"text","text":" will take into account when finding and sorting matching locations. By default, "},{"type":"codeVoice","code":"MPLocationService"},{"type":"text","text":" will search in the name, externalId (formerly known as roomId) and aliases properties. Possible other properties depend on the location content. E.g. if an "},{"type":"codeVoice","code":"MPLocation"},{"type":"text","text":" has a field called "},{"type":"codeVoice","code":"booking-id"},{"type":"text","text":", the string “booking-id” (case-sensitive) may be added. Query properties added that does not exist in any locations will be ignored.;"}],"identifier":"doc:\/\/MapsIndoors\/documentation\/MapsIndoors\/MPQuery\/queryProperties","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"queryProperties"}],"url":"\/documentation\/mapsindoors\/mpquery\/queryproperties"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Property"},{"op":"replace","path":"\/metadata\/title","value":"queryProperties"},{"op":"replace","path":"\/metadata\/symbolKind","value":"property"},{"op":"replace","path":"\/metadata\/fragments","value":[{"kind":"identifier","text":"queryProperties"}]},{"op":"replace","path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"@property"},{"kind":"text","text":" ("},{"kind":"keyword","text":"nonatomic"},{"kind":"text","text":", "},{"kind":"keyword","text":"assign"},{"kind":"text","text":", "},{"kind":"keyword","text":"unsafe_unretained"},{"kind":"text","text":", "},{"kind":"keyword","text":"readwrite"},{"kind":"text","text":") "},{"kind":"typeIdentifier","text":"NSArray<NSString *>","preciseIdentifier":"c:Q$objc(cs)NSArray"},{"kind":"text","text":" *"},{"kind":"identifier","text":"queryProperties"}],"languages":["occ"],"platforms":["iOS"]}]}},{"op":"replace","path":"\/references\/doc:~1~1MapsIndoors~1documentation~1MapsIndoors~1MPQuery\/title","value":"MPQuery"},{"op":"replace","path":"\/references\/doc:~1~1MapsIndoors~1documentation~1MapsIndoors~1MPQuery\/fragments","value":[{"kind":"identifier","text":"MPQuery"}]},{"op":"replace","path":"\/references\/doc:~1~1MapsIndoors~1documentation~1MapsIndoors~1MPQuery~1queryProperties\/title","value":"queryProperties"},{"op":"replace","path":"\/references\/doc:~1~1MapsIndoors~1documentation~1MapsIndoors~1MPQuery~1queryProperties\/fragments","value":[{"kind":"identifier","text":"queryProperties"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}